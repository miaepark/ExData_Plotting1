***first graph
> powerDT <- data.table::fread(input="household_power_consumption.txt", na.strings="?")
> hist(powerDT$Global_active_power, col = "red", main = paste("Global Active Power"),  xlab = "Global Active Power (kilowatts)")

> dev.copy(png, "plot1.png", width=480, height=480)	
> dev.off() 
	 
***second graph
> data_full <- read.csv("household_power_consumption.txt", header = T, sep = ';', na.strings = "?", check.names = F, stringsAsFactors = F, comment.char = "", quote = '\"')

#check.names = TRUE : If TRUE then the names of the variables in the data frame are checked to ensure that they are syntactically valid variable names and are not duplicated.  
#stringsAsFactors = F : should character vectors be converted to factors? 

> data_full$Date <- as.Date(data_full$Date, format = "%d/%m/%Y") 
or
> data_full$Date <- as.Date(data_full$Date)
> data <- subset(data_full, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
> rm(data_full) ## remove objects from a specified environment 

> datetime <- paste(as.Date(data$Date), data$Time) ## paste() : concatenate 연관시키다 vectors after converting to character 
> data$Datetime <- as.POSIXct(datetime) ## as.POSIXct() : functions to manipulate objects of classes "POSIXlt" and "POSIXct" representing calendar dates and times. 
> plot(data$Global_active_power ~ data$Datetime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")

> dev.copy(png, "plot2.png", width=480, hight=480)
> dev.off()

***third graph 
> with(data, {
	plot(Sub_metering_1 ~ Datetime, type = "l",
	ylab = "Global Active Power (kilowatts)", xlab = "")
	lines(Sub_metering_2 ~ Datetime, col = 'Red')
	lines(Sub_metering_3 ~ Datetime, col = 'Blue')
})

> with(data, {
 	plot(Sub_metering_1 ~ Datetime, type = "l",
 	ylab = "Global Active Power (kilowatts)", xlab = "")
 	lines(Sub_metering_2 ~ Datetime, col = 'Red')
 	lines(Sub_metering_3 ~ Datetime, col = 'Blue')
 }); legend("topright", col = c("black", "red", "blue"), lty = 1, lwd = 2, legend = c("Sub_metring_1", "Sub_metering_2", "Sub_metering_3"))
> dev.copy(png, "plot3.png", width=480, hight=480)
> dev.off()
	 
***fourth graph 
> par(mfrow = c(2,2)); with(data, {
	plot(data$Global_active_power ~ Datetime, type = "l", ylab = "Gloabl Active Power (kilowatts)", xlab = "")
	plot(data$Voltage ~ Datetime, type="l", ylab = "Voltage", xlab = "datetime")
	plot(Sub_metering_1 ~ Datetime, type="l", ylab = "Energy sub metering", xlab = "")
	lines(Sub_metering_2 ~ Datetime, col = 'Red')
	lines(Sub_metering_3 ~ Datetime, col = 'Blue')
	legend("topright", col = c("black", "red", "blue"), lty = 1, lwd = 2, legend = c("Sub_metring_1", "Sub_metering_2", "Sub_metering_3"))
	plot(data$Global_reactive_power ~ Datetime, type="l", ylab = "Gloabl_reactive_power", xlab = "datetime")
}) 
	> dev.copy(png, "plot4.png", width=480, hight=480)
> dev.off()
